'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Precisely
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"

'-------------------------------------
Include "Library\ARRAYLib.def"
Include "Library\DEBUGLib.def"
Include "Library\ERRORLib.def"
Include "Library\FILELib.def"
Include "Library\TABLELib.def"

Include "DMODasymetricMappingOverlapDlg.def"

Declare Sub DMODLGDialogLoad
Declare Sub DMODLGOKClicked
Declare Sub DMODLGBrowseForTabFileCopy
Declare Sub DMODLGInputTableClicked
Declare Sub DMODLGCreateCopyClicked

Define	CTRL_LST_INPUT_TABLES	100
Define	CTRL_TXT_OUTPUT_TABLE	200
Define	CTRL_CHK_OUTPUT_TABLE	210
Define	CTRL_CMD_OUTPUT_TABLE	220
Define	CTRL_LST_PROCESS_TABLES	300
Define	CTRL_LST_PROCESS_TYPES	400

Dim	marrInputTables(), marrProcessTables(), marrSelectedProcessTables() As String,
	msInputTab, msInputTabFile, msCopyTabFile As String,
	mbCreateCopyOfInputTable As Logical,
	mnProcessType As Integer

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODasymetricMappingOverlapDlg() As Logical

OnError GoTo ErrorOccured

DMODasymetricMappingOverlapDlg = FALSE

	If TABGetListOfNames(TAB_USE_ALL_MAPPABLE_BUT_IMAGES, marrInputTables) = 0 Then
		Note "Please open at least 2 vector base tables! before using this function!"
		Exit Function
	End If

	Dialog
		Title "Dasymetric Mapping - Overlap"
		Calling DMODLGDialogLoad

		Control StaticText
			Position 5,5
			Title "Input Table"
		Control PopupMenu		ID CTRL_LST_INPUT_TABLES
			Position 5,15		Width 205
			Calling DMODLGInputTableClicked
			Title From Variable marrInputTables

		Control CheckBox		ID CTRL_CHK_OUTPUT_TABLE
			Position 5,35
			Title "Create copy of input for processing"
			Value DMODLGCreateCopyOfInputTable()
			Calling DMODLGCreateCopyClicked
		Control EditText		ID CTRL_TXT_OUTPUT_TABLE
			Position 5,47		Width 190
		Control Button			ID CTRL_CMD_OUTPUT_TABLE
			Position 195,47	Width 15	Height 13
			Title "..."
			Calling DMODLGBrowseForTabFileCopy

		Control StaticText
			Position 5,65
			Title "Process Tables"
		Control MultiListBox	ID CTRL_LST_PROCESS_TABLES
			Position 5,75		Width 205	Height 75

		Control StaticText
			Position 5,155
			Title "Process Type:"
		Control RadioGroup		ID CTRL_LST_PROCESS_TYPES
			Position 5,167
			Title "Keep Where Process Table Overlap Input;Erase Where Process Table Overlap Input"
			Value DMODLGGetProcessType()

		Control OKButton
			Calling DMODLGOKClicked
		Control CancelButton

	If not CommandInfo(CMD_INFO_DLG_OK) Then
		Exit Function
	End If

DMODasymetricMappingOverlapDlg = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODasymetricMappingOverlapDlg")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DMODLGDialogLoad

Dim	nInputTab As Integer

OnError GoTo ErrorOccured

	If DMODLGGetInputTable() = "" Then
		nInputTab	= 1
	Else
		nInputTab	= ARRAYFindValueString(marrInputTables, DMODLGGetInputTable())
		If nInputTab = 0 Then
			nInputTab = 1
		End If
	End If
	Alter Control CTRL_LST_INPUT_TABLES Value nInputTab

	Call DMODLGCreateCopyClicked
	Call DMODLGInputTableClicked

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGDialogLoad")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DMODLGOKClicked

Dim	nTab As Integer

OnError GoTo ErrorOccured

	nTab	= ReadControlValue(CTRL_LST_INPUT_TABLES)
	If nTab = 0 Then
		Note "Please select an input table!"
		Dialog Preserve
		Exit Sub
	End If
	msInputTab	= marrInputTables(nTab)
	msInputTabFile	= TableInfo(msInputTab, TAB_INFO_TABFILE)

	mbCreateCopyOfInputTable	= ReadControlValue(CTRL_CHK_OUTPUT_TABLE)
	If mbCreateCopyOfInputTable Then
		If ReadControlValue(CTRL_TXT_OUTPUT_TABLE) = "" Then
			Note "Please specify a file name for the input table copy!"
			Dialog Preserve
			Exit Sub
		End If
		msCopyTabFile	= FILEGetAbsolutePath(PathToDirectory$(DMODLGGetInputTabFile()), ReadControlValue(CTRL_TXT_OUTPUT_TABLE))
		Call DEBUGPrint("Copy Tab File: " & DMODLGGetInputCopyTabFile())
		If DMODLGGetInputCopyTabFile() = DMODLGGetInputTabFile() Then
			Note "Please specify a different file name than the file of the input table: " & DMODLGGetInputTabFile()
			Dialog Preserve
			Exit Sub
		ElseIf DMODLGGetInputCopyTable() = msInputTab Then
			Note "Please specify a different table name than the input table: " & msInputTab
			Dialog Preserve
			Exit Sub
		End If
		If TABIsOpen(DMODLGGetInputCopyTable()) Then
			If Ask("The table specified for the copy is open. Do you want to overwrite this file: " & DMODLGGetInputCopyTabFile(), "Abort", "Overwrite") Then
				Dialog Preserve
				Exit Sub
			End If
		ElseIf FileExists(DMODLGGetInputCopyTabFile()) Then
			If Ask("The file specified for the copy already exists. Do you want to overwrite this file: " & DMODLGGetInputCopyTabFile(), "Abort", "Overwrite") Then
				Dialog Preserve
				Exit Sub
			End If
		End If
	End If

	nTab	= ReadControlValue(CTRL_LST_PROCESS_TABLES)
	If nTab = 0 Then
		Note "Please select at least one Process Table from the list!"
		Dialog Preserve
		Exit Sub
	End If
	Redim marrSelectedProcessTables(0)
	Do While nTab > 0
		Call ARRAYAddValueString(marrSelectedProcessTables, marrProcessTables(nTab))
		nTab	= ReadControlValue(CTRL_LST_PROCESS_TABLES)
	Loop

	mnProcessType	= ReadControlValue(CTRL_LST_PROCESS_TYPES)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGOKClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DMODLGInputTableClicked

Dim	nInputTab As Integer,
	sInputTab As String

OnError GoTo ErrorOccured

	Redim marrProcessTables(0)
	nInputTab	= ReadControlValue(CTRL_LST_INPUT_TABLES)
	If nInputTab = 0 Then
		Redim marrProcessTables(1)
		marrProcessTables(1) = "Please select an input table to load process tables"
		Alter Control CTRL_LST_PROCESS_TABLES	Disable
	Else
		sInputTab	= marrInputTables(nInputTab)
		Redim marrProcessTables(0)
		If TABGetListOfNames(TAB_USE_ALL_MAPPABLE_BUT_IMAGES, marrProcessTables) = 0 Then
			Redim marrProcessTables(1)
			marrProcessTables(1) = "Please open at least 2 vector base tables! before using this function!"
			Alter Control CTRL_LST_PROCESS_TABLES	Disable
		Else
			Call ARRAYRemoveValueString(marrProcessTables, sInputTab)
			If Ubound(marrProcessTables) = 0 Then
				marrProcessTables(1) = "Please open at least 2 vector base tables! before using this function!"
				Alter Control CTRL_LST_PROCESS_TABLES	Disable
			Else
				Alter Control CTRL_LST_PROCESS_TABLES	Enable
			End If
		End If
	End If

	Alter Control CTRL_LST_PROCESS_TABLES	Title From Variable marrProcessTables

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGInputTableClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DMODLGCreateCopyClicked

OnError GoTo ErrorOccured

	If ReadControlValue(CTRL_CHK_OUTPUT_TABLE) Then
		Alter Control CTRL_TXT_OUTPUT_TABLE Enable
		Alter Control CTRL_CMD_OUTPUT_TABLE Enable
	Else
		Alter Control CTRL_TXT_OUTPUT_TABLE Disable
		Alter Control CTRL_CMD_OUTPUT_TABLE Disable
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGCreateCopyClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DMODLGBrowseForTabFileCopy

OnError GoTo ErrorOccured

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGBrowseForTabFileCopy")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetInputTable() As String

OnError GoTo ErrorOccured

	DMODLGGetInputTable = msInputTab
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetInputTable")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetInputTabFile() As String

OnError GoTo ErrorOccured

	DMODLGGetInputTabFile = msInputTabFile
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetInputTabFile")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetInputCopyTable() As String

OnError GoTo ErrorOccured

	DMODLGGetInputCopyTable	= PathToTableName$(msCopyTabFile)
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetInputCopyTable")
	Call ERRShow()

End Function
'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetInputCopyTabFile() As String

OnError GoTo ErrorOccured

	DMODLGGetInputCopyTabFile	= msCopyTabFile
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetInputCopyTabFile")
	Call ERRShow()

End Function


'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGCreateCopyOfInputTable() As Logical

OnError GoTo ErrorOccured

	DMODLGCreateCopyOfInputTable = mbCreateCopyOfInputTable
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGCreateCopyOfInputTable")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetTabFileToProcess() As String

OnError GoTo ErrorOccured

	If DMODLGCreateCopyOfInputTable() Then DMODLGGetTabFileToProcess =
		msCopyTabFile Else DMODLGGetTabFileToProcess =
		TableInfo(DMODLGGetInputTable(), TAB_INFO_TABFILE)
	End If
	Exit Function
'- ------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetTabFileToProcess")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetTableToProcess() As String

OnError GoTo ErrorOccured

	If DMODLGCreateCopyOfInputTable() Then
		DMODLGGetTableToProcess = PathToTableName$(msCopyTabFile)
	Else
		DMODLGGetTableToProcess = DMODLGGetInputTable()
	End If
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetTableToProcess")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetNumProcessTables() As Integer

OnError GoTo ErrorOccured

	DMODLGGetNumProcessTables = Ubound(marrSelectedProcessTables)
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetNumProcessTables")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetProcessTable(ByVal nItem As Integer) As String

OnError GoTo ErrorOccured

	If nItem < 1 or nItem > DMODLGGetNumProcessTables() Then
		DMODLGGetProcessTable = ""
	Else
		DMODLGGetProcessTable = marrSelectedProcessTables(nItem)
	End If
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetProcessTable")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DMODLGGetProcessType() As Integer

OnError GoTo ErrorOccured

	DMODLGGetProcessType = IIf(mnProcessType = 0, 1, mnProcessType)
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGGetProcessType")
	Call ERRShow()

End Function
'**********************************************************************************************''
Sub DMODLGSetProcessType(ByVal nType As Integer)

OnError GoTo ErrorOccured

	mnProcessType = nType
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DMODLGSetProcessType")
	Call ERRShow()

End Sub